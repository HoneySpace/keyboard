/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Y  &kp C  &kp L     &kp M           &kp K        &kp Z    &kp F  &kp U         &kp COMMA  &kp Z  &kp BSPC
&kp LCTRL         &kp I  &kp S  &kp R     &kp T           &kp G        &kp P    &kp N  &kp E         &kp A      &kp O  &kp SQT
&kp LEFT_COMMAND  &kp Q  &kp V  &kp W     &kp D           &kp J        &kp B    &kp H  &kp SLASH     &kp DOT    &kp X  &kp ESC
                                &kp LGUI  &sk LEFT_SHIFT  &kp SPACE    &kp RET  &to 1  &kp LEFT_ALT
            >;
        };

        symbols_nums {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp PERCENT    &kp DOLLAR     &kp GRAVE                   &kp SINGLE_QUOTE                &kp DOUBLE_QUOTES            &kp LEFT_BRACE        &kp N7  &kp N8  &kp N9  &kp RIGHT_BRACE        &kp BSPC
&kp CARET  &kp AMPERSAND  &kp PIPE       &hold_tap UNDERSCORE MINUS  &hold_tap PLUS EQUAL            &hold_tap SEMICOLON COLON    &kp LEFT_PARENTHESIS  &kp N4  &kp N5  &kp N6  &kp RIGHT_PARENTHESIS  &hold_tap PERIOD COMMA
&kp LSHFT  &kp HASH       &kp LESS_THAN  &kp GREATER_THAN            &hold_tap QUESTION EXCLAMATION  &hold_tap SLASH ASTERISK     &kp LEFT_BRACKET      &kp N1  &kp N2  &kp N3  &kp RIGHT_BRACKET      &to 4
                                         &mo 5                       &to 0                           &kp SPACE                    &kp RET               &to 2   &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp EXCL      &kp AT        &kp HASH      &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT   &trans        &trans        &trans        &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                        &kp LGUI      &to 0     &kp SPACE    &kp RET    &to 3      &kp RALT
            >;
        };

        music_mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_MUTE         &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_UP    &trans            &trans          &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_DOWN  &trans            &trans          &trans      &trans  &trans
                        &trans  &to 0   &trans    &trans             &to 4             &trans
            >;
        };

        gaming {
            bindings = <
&trans  &kp TAB         &kp Q  &kp W   &kp E  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_SHIFT  &kp A  &kp S   &kp D  &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LCTRL       &kp Z  &kp X   &kp C  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                               &trans  &to 0  &kp SPACE    &trans  &trans  &trans
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &kp UP_ARROW  &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans        &trans     &trans  &trans  &trans
                        &trans  &trans  &trans    &trans    &trans        &trans
            >;
        };
    };
};
